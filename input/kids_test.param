#------Experiments to test (separated with commas)-----

data.experiments=['kids450_bs_2cosmos_mark2']

#------ Settings for the over-sampling. The first element will always be set to
# 1, for it is the sampling of the cosmological parameters. The other numbers
# describe the over sampling of the nuisance parameter space. This array must
# have the same dimension as the number of blocks in your run (so, 1 for
# cosmological parameters, and then 1 for each experiment with varying nuisance
# parameters).
#data.over_sampling=[1, 1, 4]

#------ Parameter list -------

# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo' or 'nuisance'

# Cosmological parameters list
# main parameters to extract:

data.parameters['omega_cdm_1']    = [0.1256279,   0.01, 0.99, 0,    1, 'cosmo1']
data.parameters['ln10^{10}A_s_1'] = [2.76131,   1.7, 5., 0.,    1, 'cosmo1']
data.parameters['omega_b_1']      = [0.0213186895,  0.01875, 0.02625, 0,  1, 'cosmo1']
data.parameters['n_s_1']          = [1.286895,   0.7, 1.3, 0,    1, 'cosmo1']
data.parameters['h_1']            = [0.8089067,     0.64,   0.82,   0., 1, 'cosmo1']

data.parameters['omega_cdm_2']    = [0.1256279,   0.01, 0.99, 0,    1, 'cosmo2']
data.parameters['ln10^{10}A_s_2'] = [2.76131,   1.7, 5., 0.,    1, 'cosmo2']
data.parameters['omega_b_2']      = [0.0213186895,  0.01875, 0.02625, 0,  1, 'cosmo2']
data.parameters['n_s_2']          = [1.286895,   0.7, 1.3, 0,    1, 'cosmo2']
data.parameters['h_2']            = [0.8089067,     0.64,   0.82,   0., 1, 'cosmo2']

# Nuisance parameters:

# if kids450_cf_2cosmos_likelihood_public.use_joint_nuisance = False:
# amplitude for IA:
data.parameters['A_IA_1'] = [ 1.115492 , -6., 6., 0, 1, 'nuisance']
data.parameters['A_IA_2'] = [1.115492, -6., 6., 0, 1, 'nuisance']
#
# amplitude for baryon feedback:
data.parameters['A_bary_1'] = [2.305112, 0., 10., 0, 1, 'nuisance']
data.parameters['A_bary_2'] = [2.305112, 0., 10., 0, 1, 'nuisance']
# if kids450_cf_2cosmos_likelihood_public.use_joint_nuisance = True:
# amplitude for IA:
#data.parameters['A_IA'] = [0., -6., 6., 0.5, 1, 'nuisance']
#
# amplitude for baryon feedback:
#data.parameters['A_bary'] = [2., 0., 10., 0.5, 1, 'nuisance']

# Derived parameters

#data.parameters['Omega_Lambda'] = [1, None, None, 0, 1, 'derived']
data.parameters['Omega_m_1']      = [1, None, None, 0, 1, 'derived']
data.parameters['sigma8_1']       = [1, None, None, 0, 1, 'derived']
data.parameters['Omega_m_2']      = [1, None, None, 0, 1, 'derived']
data.parameters['sigma8_2']       = [1, None, None, 0, 1, 'derived']

# Other cosmo parameters (fixed parameters, precision parameters, etc.)

# fix main cosmology to Planck:
# Table 2 last column (Planck + WP, 68% c.l.) from Planck 2014 (A&A, 571, A16 (2014))
#data.cosmo_arguments['tau_reio'] = 0.089
data.cosmo1_arguments['Omega_k'] = 0.
data.cosmo2_arguments['Omega_k'] = 0.

